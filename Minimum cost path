
from sys import stdin
MAX_VALUE = 2147483647

def minCostPath(input, mRows, nCols, dp) :
	#Your code goes here
    dp[mRows][nCols] = 0
    
    for i in range(mRows-1, -1, -1) :
        for j in range(nCols-1, -1, -1) :
            dp[i][j] = input[i][j] + min(dp[i+1][j], dp[i][j+1], dp[i+1][j+1])
            
    return dp[0][0]


#taking input using fast I/O method
def take2DInput() :
    li = stdin.readline().rstrip().split(" ")
    mRows = int(li[0])
    nCols = int(li[1])
    
    if mRows == 0 :
        return list(), 0, 0
    
    mat = [list(map(int, input().strip().split(" "))) for row in range(mRows)]
    return mat, mRows, nCols


#main
mat, mRows, nCols = take2DInput()
dp = [[MAX_VALUE for i in range(nCols+1)] for j in range(mRows+1)]
print(minCostPath(mat, mRows, nCols, dp))
